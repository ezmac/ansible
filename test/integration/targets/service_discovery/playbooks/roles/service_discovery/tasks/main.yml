---
# tasks file for ecs_cluster

- block:
    # ============================================================
    - name: set up aws connection info
      set_fact:
        aws_connection_info: &aws_connection_info
          aws_access_key: "{{ aws_access_key }}"
          aws_secret_key: "{{ aws_secret_key }}"
          security_token: "{{ security_token }}"
          region: "{{ aws_region }}"
      no_log: yes

    - name: create a vpc to work in
      ec2_vpc_net:
        cidr_block: 10.0.0.0/16
        state: present
        name: '{{ resource_prefix }}_ecs_cluster'
        resource_tags:
          name: '{{ resource_prefix }}_ecs_cluster'
        <<: *aws_connection_info
      register: setup_vpc

    - name: create private service discovery namespace
      service_discovery_namespace:
        name: "private-{{ namespace_name}}"
        state: present
        type: DNS_PRIVATE
        vpc_id: "{{ setup_vpc.vpc.id }}"
        <<: *aws_connection_info
      register: service_discovery_private_namespace

    - name: check that service_discovery_namespace changed
      assert:
        that:
          - service_discovery_private_namespace.changed
    - name: create service discovery registry
      service_discovery:
        name: "private-{{ namespace_name}}"
        state: present
        dns_config:
          namespace_id: "{{ service_discovery_private_namespace.namespace.id }}"
          routing_policy: "WEIGHTED"
          dns_records:
            - type: "SRV"
              ttl: 60
        <<: *aws_connection_info
      register: service_discovery_registry

    - name: check that sd registry changed
      assert:
        that:
          - service_discovery_registry.changed


  always:
    # tear down: registry, namespace, vpc
    - name: announce teardown start
      debug:
        msg: "***** testing complete. commence teardown *****"

    # ignore errors so that test repeats are more reliable
    - name: remove private service_discovery registry
      service_discovery:
        name: "private-{{ namespace_name }}"
        state: absent
        dns_config:
          namespace_id: "{{ service_discovery_private_namespace.namespace.id}}"
        <<: *aws_connection_info
      ignore_errors: yes

    - name: remove private service_discovery_namespace
      service_discovery_namespace:
        name: "private-{{ namespace_name }}"
        state: absent
        <<: *aws_connection_info
      ignore_errors: yes

    - name: remove setup vpc
      ec2_vpc_net:
        cidr_block: 10.0.0.0/16
        state: absent
        name: '{{ resource_prefix }}_ecs_cluster'
        <<: *aws_connection_info
      ignore_errors: no
