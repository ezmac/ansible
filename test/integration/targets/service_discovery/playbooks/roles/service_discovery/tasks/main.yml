---
# tasks file for ecs_cluster

- block:
    # ============================================================
    - name: set up aws connection info
      set_fact:
        aws_connection_info: &aws_connection_info
          aws_access_key: "{{ aws_access_key }}"
          aws_secret_key: "{{ aws_secret_key }}"
          security_token: "{{ security_token }}"
          region: "{{ aws_region }}"
      no_log: yes

    - name: create a vpc to work in
      ec2_vpc_net:
        cidr_block: 10.0.0.0/16
        state: present
        name: '{{ resource_prefix }}_ecs_cluster'
        resource_tags:
          name: '{{ resource_prefix }}_ecs_cluster'
        <<: *aws_connection_info
      register: setup_vpc

# There's currently no support for these tests.
# If you want to run them, you'll need to create a service disovery namespace with something like
#  aws --region us-east-1 servicediscovery create-private-dns-namespace --name testnamespace
# then, set that namespace below to create registry
# Alternatively, add the other PR's service_discovery_namespace module

#   - name: create private service discovery namespace
#     service_discovery_namespace:
#       name: "private-{{ namespace_name}}"
#       state: present
#       type: DNS_PRIVATE
#       vpc_id: "{{ setup_vpc.vpc.id }}"
#       <<: *aws_connection_info
#     register: service_discovery_private_namespace

#   - name: check that service_discovery_namespace changed
#     assert:
#       that:
#         - service_discovery_private_namespace.changed

#   - name: create service discovery registry
#     service_discovery_registry:
#       name: "private-{{ namespace_name}}"
#       state: present
#       dns_config:
#         namespace_id: "{{ service_discovery_private_namespace.namespace.id }}"
#         routing_policy: "WEIGHTED"
#         dns_records:
#           - type: "SRV"
#             ttl: 60
#       <<: *aws_connection_info
#     register: service_discovery_registry

#   - name: check that sd registry changed
#     assert:
#       that:
#         - service_discovery_registry.changed

#   - name: create second service discovery registry
#     service_discovery_registry:
#       name: "private-{{ namespace_name}}-two"
#       state: present
#       dns_config:
#         namespace_id: "{{ service_discovery_private_namespace.namespace.id }}"
#         routing_policy: "WEIGHTED"
#         dns_records:
#           - type: "SRV"
#             ttl: 60
#       <<: *aws_connection_info
#     register: service_discovery_registry_two

#   - name: check that sd registry changed
#     assert:
#       that:
#         - service_discovery_registry_two.changed

#   - name: repeat create second service discovery registry
#     service_discovery_registry:
#       name: "private-{{ namespace_name}}-two"
#       state: present
#       dns_config:
#         namespace_id: "{{ service_discovery_private_namespace.namespace.id }}"
#         routing_policy: "WEIGHTED"
#         dns_records:
#           - type: "SRV"
#             ttl: 60
#       <<: *aws_connection_info
#     register: service_discovery_registry_two

#   - name: check that sd registry is not changed
#     assert:
#       that:
#         - not service_discovery_registry_two.changed

#   - name: delete second service discovery registry
#     service_discovery_registry:
#       name: "private-{{ namespace_name}}-two"
#       state: absent
#       dns_config:
#         namespace_id: "{{ service_discovery_private_namespace.namespace.id }}"
#         routing_policy: "WEIGHTED"
#         dns_records:
#           - type: "SRV"
#             ttl: 60
#       <<: *aws_connection_info
#     register: service_discovery_registry_two
# There should probably be something about verifying it was deleted, but I haven't written a query yet.


  always:
    # tear down: registry, namespace, vpc
    - name: announce teardown start
      debug:
        msg: "***** testing complete. commence teardown *****"

#   # ignore errors so that test repeats are more reliable
#   - name: remove private service_discovery registry
#     service_discovery_registry:
#       name: "private-{{ namespace_name }}"
#       state: absent
#       dns_config:
#         namespace_id: "{{ service_discovery_private_namespace.namespace.id}}"
#       <<: *aws_connection_info
#     ignore_errors: yes

#   - name: remove private service_discovery_namespace
#     service_discovery_namespace:
#       name: "private-{{ namespace_name }}"
#       state: absent
#       <<: *aws_connection_info
#     ignore_errors: yes

    - name: remove setup vpc
      ec2_vpc_net:
        cidr_block: 10.0.0.0/16
        state: absent
        name: '{{ resource_prefix }}_ecs_cluster'
        <<: *aws_connection_info
      ignore_errors: no
